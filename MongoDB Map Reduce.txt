show dbs
use bill
db.pay.insert({Cust_ID:"A123",Product:"Milk",Amount:40,Status:"P"});
db.pay.insert({Cust_ID:"A123",Product:"Parle_G",Amount:50,Status:"NP"});
db.pay.insert({Cust_ID:"A123",Product:"Lays Chips",Amount:40,Status:"P"});
db.pay.insert({Cust_ID:"B123",Product:"Mentos",Amount:10,Status:"P"});
db.pay.insert({Cust_ID:"B123",Product:"Maggie",Amount:60,Status:"NP"});
db.pay.find()
db.pay.mapReduce(function(){emit(this.Cust_ID,this.Amount);},function(key,values){return Array.sum(values)},{query:{"Status":"NP"},out:"Bill_Amount"})
var mapFunc1=function(){emit(this.Cust_ID,this.Amount);};
var reduceFunc1=function(keyCustID,valuePrices){return Array.sum(valuePrices);};
db.pay.mapReduce(mapFunc1,reduceFunc1,{out:"Map"})
db.Bill_Amount.find()
db.Map.find()




 Map-Reduce:
In very simple terms, the mapReduce command takes 2 primary inputs, the mapper function and 
the reducer function.
A Mapper will start off by reading a collection of data and building a Map with only the required 
fields we wish to process and group them into one array based on the key.
And then this key value pair is fed into a Reducer, which will process the values.
Map-Reduce Syntax:
db.collection.mapReduce( 
function(){emit(key, value);},
function(key,values) {return reduceFunction},
{
out: collection, 
query: document, 
sort: document, 
limit: number
}
)
Map-Reduce Syntax Explanation:
The above map-reduce function will query the collection, and then map 
the output documents to the emit key-value pairs. After this, it is 
reduced based on the keys that have multiple values. Here, we have 
used the following functions and parameters.
• Map: – It is a JavaScript function. It is used to map a value with a key and 
produces a key-value pair.
• Reduce: – It is a JavaScript function. It is used to reduce or group 
together all the documents which have the same key.
• Out: – It is used to specify the location of the map-reduce query output.
• Query: – It is used to specify the optional selection criteria for selecting 
documents.
• Sort: – It is used to specify the optional sort criteria.
• Limit: – It is used to specify the optional maximum number of 
documents which are desired to be returned.
[06/11, 8:59 am] Dy Pranav Jadhav: Implement Map reduces operation with suitable 
example usingMongoDB
